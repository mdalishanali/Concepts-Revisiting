//EXECUTION CONTEXT
//ENVIROMENT IN WHICH JS CODE IS EXECUTED
//BY ENVIROMENT MEANS, I MEANS THE VALUE OF THIS, VAR, OBJ, FN JS CODE HAS ACCESS TO PARTICULAR TIME 
//DEPRENDS UPON WHICH PART OF CODE IS RUNNING, EXECUTION CONTEXT CHANGE
/**
 * What is an Execution Context? Simply put, an execution context is an abstract concept of an environment where the Javascript code is evaluated and executed. Whenever any code is run in JavaScript, it's run inside an execution context.
        MORE SIMPLER EXECUTION CONTEXT IS ENVIROMENT WHERE OUR CODE IS EXECUTE AND EVALUATE
 */
//CONTEXT --BACKGROUND --ENVIROMENT -- SURROUNDIN OF EVENTS OR OCCURENCE

///==================================================================
///==================================================================
/**TYPES OF EXECUTION CONTEXT
 * 1.GLOBAL EXECUTION CONTEXT
 * 2.FUNCTIONAL EXECUTION CONTEXT
 */

/**
 * 1.GLOBAL EXECUTION CONTEXT
 *              THIS IS THE DEFALUT EXECUTION CONTEXT IN WHICH JS CODE START ITS EXECUTION WHEN THE FILE FIRSTS LOAD ON THE BROWSER
 */
/**
 * 2.FUNCTIONAL EXECUTION CONTEXT
 *      FUNCTIONAL EXECUTION CONTEXT IS DEFINED AS CONTEXT CREATED BY THE JS ENGINE WHENEVER IT FINDS ANY FUNCTION CALL
 */
//***************************************************************** */
///==================================================================
//*****************************************************************
///==================================================================
/**WHEN A JS ENGINES EXECUTES A SCRIPTS (JS CODE), IT CREATES EXECUTION CONTEXT */
//EACH EXECUTION CONTEXT HAS TWO PHASES
//1..CREATION PHASE
//..2.EXECUTION PHASE
/**DURING THE CREATION PHASE, IT PERFORMS THE FOLLOWING TASKS
 * 1. CREATE A GLOBAL OBJECT  I.E.. WINDOW IN THE BROWSER
 * 2.CREATE A 'this'  OBJECT WHICH POINTS TO THE GLOBAL OBJECT ABOVE
 * 3.SETUP A MEMORY FOR STORING VARIABLES, OBJECTS ETC..
 * 4. HOISTING
 * 
 */
/**DURING THE EXECUTION PHASE,THE JS ENGINE EXECUTE THE CODE LINE BY LINE .. iN THIS PHASE
 * 1. IT ASSIGN VALUES TO VARIABLE
 * 2. EXECUTE THE FUNCTION CALLS
 */

/**
 * FOR EVERY FUNCTION CALL, THE JS ENGINE CREATE A NEW FUNCTION EXECUTION CONTEXT
 * COMMUNICATION BETWEEN GLOBAL AND FUNCTIONAL EXECUTION CONTEXT
 */

/**
 * TO KEEP TRACK ALL THE EXECUTION CONTEXT INCLUDING THE GLOBAL EXECUTION CONTEXT AND FUNCTIONAL EXECUTION CONTEXT , THE JS ENGINE USE A DATA STRUCTURE NAMES A EXECUTION STACK
 */
/**
 * JS ENGINE USE A CALL STACK TO MANAGE EXECUTION CONTEXT : THE GLOBAL EXECUTION CONTEXT AND FUNCTIONAL EXECUTION CONTEXTS
 * THE CALL STACK WORKS BASED ON THE LIFO PRINCIPLE ..i.e. last is first out
 */